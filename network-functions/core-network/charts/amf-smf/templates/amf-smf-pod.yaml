# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    name: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: sriov-openness-vf-g2
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: {{ .Values.isPrivileged }}
            capabilities:
                 add: ["NET_ADMIN"]
          command: ["/bin/bash", "-c", "--"]
          args:
{{ if eq .Values.amf_smf_cera true }}

          - |
            cd /root/amf-smf/;
            ./run-smf-smf.sh \
            -c {{ .Values.amf_smf_configs.pfd_config_file_path }} \
            -p {{ .Values.amf_smf_configs.sm_policy_config_file_path }} \
            -s {{ .Values.amf_smf_configs.local_dn_subnet }} \
            -i {{ .Values.amf_smf_configs.routed_app_id }};
            while true ; do
              sleep 90000000
            done
{{ else if eq .Values.amf_smf_autostart true }}

          - |
            cd /root/amf-smf/;./cp_config.sh;sleep 10;./cp_restart.sh;
            while true ; do
              sleep 90000000
            done
{{ else }}

          - |
            while true ; do
              sleep 90000000
            done
{{ end }}

          volumeMounts:
            - name: amf-smf-vol
{{ if eq .Values.amf_smf_cera true }}
              mountPath: /root/amf-smf/update_amf_smf_configs.py
{{ else }}
              mountPath: /root/amf-smf
{{ end }}
              readOnly: false
          resources:
            limits:
              intel.com/intel_sriov_VF_G2: '1'
            requests:
              intel.com/intel_sriov_VF_G2: '1'
      volumes:
      - name: amf-smf-vol
        hostPath:
{{ if eq .Values.amf_smf_cera true }}
          path: {{ .Values.node.path }}/update_amf_smf_configs.py
          type: File
{{ else }}
          path: {{ .Values.node.path }}
{{ end }}
