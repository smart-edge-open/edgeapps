# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

{{- if contains $.Values.buildScope "cloud" }}

apiVersion: v1
kind: Service
metadata:
  name: cloud-web-service
  labels:
    app: cloud-web
spec:
  ports:
    - port: 443
      targetPort: 8443
      name: https
  externalIPs:
    - {{ .Values.cloudWebExternalIP }}
  selector:
    app: cloud-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-web
  labels:
     app: cloud-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloud-web
  template:
    metadata:
      labels:
        app: cloud-web
    spec:
      securityContext:
        fsGroup: {{ $.Values.groupId }}
      enableServiceLinks: false
      containers:
        - name: cloud-web
{{- if (len $.Values.connector.cloudHost) }}
          image: {{ $.Values.registryPrefix }}smtc_web_cloud_tunnelled:latest
{{- else }}
          image: {{ $.Values.registryPrefix }}smtc_web_cloud:latest
{{- end }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
          env:
            - name: DBHOST
              value: "http://cloud-db-service:9200" 
            - name: PROXYHOST
              value: "http://cloud-storage-service.default.svc.cluster.local:8080"
            - name: SCENARIO
              value: {{ join "," $.Values.scenario | quote }}
            - name: HEALTH_CHECK
{{- if gt (int $.Values.noffices) 1 }}
              value: "enabled"
{{- else }}
              value: "disabled"
{{- end }}
{{- if (len $.Values.connector.cloudHost) }}
{{- range $scenarioIdx, $scenarioName := $.Values.scenario }}
{{- $args := dict "scenarioName" $scenarioName "Values" $.Values }}
{{- range $officeIdx := until ( int ( include "smtc.noffices" $args ) ) }}
{{- $officeIdx2 := add (mul $officeIdx (len $.Values.scenario)) $scenarioIdx }}
            - name: "FORWARD_TUNNEL{{ $officeIdx2 }}"
              value: "{{ $.Values.connector.cloudHost }}:{{ add $.Values.connector.officeStoragePort $officeIdx2 }} localhost:{{ add $.Values.connector.officeStoragePort $officeIdx2 }}"
{{- end }}
{{- end }}
{{- end }}
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
            - mountPath: /var/run/secrets
              name: self-signed-certificate
              readOnly: true
{{- if (len $.Values.connector.cloudHost) }}
            - mountPath: /etc/hostkey
              name: hostkey
              readOnly: true
{{- end }}
      volumes:
        - name: timezone
          hostPath:
            path: /etc/localtime
            type: File
        - name: self-signed-certificate
          secret:
            secretName: self-signed-certificate
{{- if (len $.Values.connector.cloudHost) }}
        - name: hostkey
          secret:
            secretName: tunnel-secret
            defaultMode: 0440
{{- end }}
      {{ include "smtc.platform.node-selector" . }}

{{- end }}
