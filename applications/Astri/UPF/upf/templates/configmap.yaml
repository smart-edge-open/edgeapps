# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2022 Astri Corporation

kind: ConfigMap
metadata:
  name: upf-conf
apiVersion: v1
data:
  vpp.conf_template: |
    upf enable-disable

    upf nwi name epc vrf 0
    set int ip address net1-if {{ .Values.vpp.n3.ipAddress }}/{{ .Values.vpp.n3.mask }}
    set int state net1-if up
    set interface tag net1-if n3
    upf gtpu endpoint ip {{ .Values.vpp.n3.ipAddress }} intf access nwi epc TEID-Range-Indication 4

    set int ip address net2-if {{ .Values.vpp.n6.ipAddress }}/{{ .Values.vpp.n6.mask }}
    set int state net2-if up
    set interface tag net2-if n6
    ip route add 0.0.0.0/0 table 0 via {{ .Values.vpp.n6.gw }} net2-if
    
    {{- if eq $.Values.vpp.n4.podIPAddr true }}
    create host-interface name vpp hw-addr 00:12:34:56:78:9a
    set interface state host-vpp up
    set interface ip addr host-vpp {{ .Values.vpp.vethPeerVppAddress }}
    set interface mtu packet 1500 host-vpp
    {{- else }}
    set int ip address net3-if {{ .Values.vpp.n4.vf.ipAddress }}/{{ .Values.vpp.n4.vf.mask }}
    set int state net3-if up
    set interface tag net3-if n4
    upf pfcp endpoint ip {{ .Values.vpp.n4.vf.ipAddress }}
    {{- end }}

    {{- if eq $.Values.vpp.n6NatEnable true }}
    nat44 add interface address net2-if
    set interface nat44 in net1-if out net2-if output-feature
    {{- end }}

    {{- if eq $.Values.vpp.dnsRedirectEnable true }}
    binary-api dns_name_server_add_del {{ .Values.vpp.dnsServerIP }}
    binary-api dns_enable_disable
    {{- end }}

    upf heartbeat disable

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: start-annotation
data:
  start-annotation.sh: |
    #!/bin/bash -x    
    sudo iptables -t nat -A PREROUTING -p udp --dport 8805 -j DNAT --to-destination 172.30.30.30:8805
    sudo iptables -t nat -A POSTROUTING -p udp --dport 8805 -j SNAT --to 172.30.30.1

    veth_pair()
    {
        sudo ip link add vpp address 00:12:34:56:78:9a type veth peer name host
        sudo ip link set vpp up
        sudo ip link set host up
        sudo ip addr add $VETHPEERHOSTADDR dev host
        sudo sysctl -w net.ipv4.ip_forward=1
        sudo iptables --table nat --append POSTROUTING --jump MASQUERADE

        echo "ue networks: $UE_NETWORK"
        echo "veth peer vpp addr: $VETHPEERVPPADDR"
        echo "veth peer host addr: $VETHPEERHOSTADDR"

        vethpeervppIP=`echo $VETHPEERVPPADDR | sed 's/...$//'`
        vethpeerhostIP=`echo $VETHPEERHOSTADDR | sed 's/...$//'`
        array=(${UE_NETWORK//,/ })
        for var in ${array[@]}
        do
                echo $var
                sudo ip route add $var via $vethpeervppIP
        done

        echo "edge app networks: $EDGE_APP_NETWORK"
        array=(${EDGE_APP_NETWORK//,/ })
        for var in ${array[@]}
        do
                echo $var
                sudo sed -i '/set interface mtu packet 1500 host-vpp/ a\ip route add '$var' via '$vethpeerhostIP' host-vpp'  /etc/vpp/upf.conf

        done
    }

    sudo sed -i -r "7 a\ \ exec /etc/vpp/upf.conf" /root/vpp/extras/vpp_config/data/startup.conf.template
    sudo sed -i -r "/plugin gtpu_plugin.so \{\{ disable \}\}/ a\  plugin ndpi_plugin.so \{\{ disable \}\}" /root/vpp/extras/vpp_config/data/startup.conf.template
    sudo cp /etc/upfconf/vpp.conf_template /etc/vpp/upf.conf
    veth_pair

    j=`cat /etc/podnetinfo/annotations | grep network-status | grep -o interface | wc -l`

    for((i=1;i<=j;i++));
    do
            pcilist=$(echo $pcilist --interface=net$i-)
            str=`cat /etc/podnetinfo/annotations | grep network-status |awk -F 'pci-address' -v t="$[$i+1]" '{print $t}'`
            pci=$(echo ${str%%\\n*} | awk '{print $2}' |sed 's/\\"//g')
            if [[ "$pci" =~ ^[a-zA-Z0-9] ]]; then echo "pci net$i exist"; else echo "pci net$i not exist, running tail -f /dev/null"; tail -f /dev/null; fi
            r=`echo $pci | sed 's/.\{4\}//' | sed 's#:0#/#g' | sed 's/.\{1\}//' | sed 's/\./\//' | sed 's/\:/\//'`
            sudo sed -i "s#net$i-if#VirtualFunctionEthernet`echo $r`#g" /etc/vpp/upf.conf
            pcilist=$(echo $pcilist$pci)
    done

    sudo /usr/bin/vpp-start.sh ${pcilist}
    {{- if eq $.Values.vpp.n4.podIPAddr true }}
        vethPeerVppAddress={{ .Values.vpp.vethPeerVppAddress }}
        vppIP=$(echo ${vethPeerVppAddress%%/*})
        sudo vppctl upf pfcp endpoint ip $vppIP
    {{- end }}

    tail -f /dev/null
