apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vclite.fullname" . }}
  labels:
    {{- include "vclite.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "vclite.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vclite.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vclite.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      - name: x-authority-volume  
        hostPath:
          path: /root/.Xauthority
          type: Directory
      - name: tmp-x11-volume  
        hostPath:
          path: /tmp/.X11-unix/
          type: Directory
      - name: etc-timezone-volume  
        hostPath:
          path: /etc/timezone
          type: File
      - name: etc-localtime-volume  
        hostPath:
          path: /etc/localtime
          type: File
      - name: usage
        hostPath:
          path: /home/vclite/Usage
          type: Directory
      - name: kiosk-services-media
        hostPath:
          path: /home/vclite/KioskServicesMedia
          type: Directory
      hostNetwork: true
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: 8001
            name: port-8001
            protocol: TCP
          - containerPort: 5051
            name: port-5051
            protocol: TCP
          env:
          - name: DISPLAY
            value: "{{ .Values.display.displayName }}"
          - name: WorkerServiceSetup__EndpointId
            value: "{{ .Values.display.EndpointId }}"
          - name: WorkerServiceSetup__BaseCmsUrl
            value: "{{ .Values.display.BaseCmsUrl }}"
          volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /root/.Xauthority
            name: x-authority-volume
          - mountPath: /tmp/.X11-unix/
            name: tmp-x11-volume
          - mountPath: /etc/timezone
            name: etc-timezone-volume
          - mountPath: /etc/localtime
            name: etc-localtime-volume
          - mountPath: /opt/Vsblty/KioskFramework/Usage
            name: usage
          - mountPath: /opt/Vsblty/KioskServicesMedia/
            name: kiosk-services-media
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
