apiVersion: v1
kind: ConfigMap
metadata:
  name: config-json-volume
data:
  config.json: |-
    {
    "default": {
        "vclite": {
            "hostUrl": "{{ .Values.vcapp.dns }}",
            "hostPort": "{{ .Values.vcapp.port }}"
        },
        "logLevel": "DEBUG",
        "pipeline": {
            "template": [
                "rtspsrc location={input} ! rtph264depay ! decodebin ! videoconvert ! video/x-raw,format=BGRx !",
                "gvadetect model={faceDetection[model]} model-proc={faceDetection[proc]} device={faceDetection[device]} ! gvatrack ! queue !",
                "gvaclassify reclassify-interval=5 model={headPose[model]} device={headPose[device]} batch-size=1 pre-process-backend=opencv object-class=face ! queue !",
                "gvaclassify reclassify-interval=5 model={ageGender[model]} device={ageGender[device]} batch-size=1 pre-process-backend=opencv object-class=face ! queue name=frame-process !",
                "videoconvert name=videoconvert ! video/x-raw,format=NV12 ! autovideosink name=autovideosink"
            ],
            "params": {
                "faceDetection": {
                    "model": "/home/vedge/models/face-detection-adas-0001/FP32/face-detection-adas-0001.xml",
                    "proc": "/home/vedge/models/face-detection-adas-0001/PROC/face-detection-adas-0001.json",
                    "device": "CPU"
                },
                "ageGender": {
                    "model": "/home/vedge/models/age-gender-recognition-retail-0013/FP32/age-gender-recognition-retail-0013.xml",
                    "device": "CPU"
                },
                "headPose": {
                    "model": "/home/vedge/models/head-pose-estimation-adas-0001/FP32/head-pose-estimation-adas-0001.xml",
                    "device": "CPU"
                },
                "reidThreshold": 0.6
            }
        }
    },
    "cameras": {
        "camerap-1": {
            "logLevel": "DEBUG",
            "cloudCredential": "{{ .Values.device.accessToken }}",
            "cloudEnv": "DEV",
            "pipeline": {
                "params": {
                    "input": "{{ .Values.camera.rtsp }}"
                }
            },
            "services": [
                {
                    "type": "age-gender-counting",
                    "pipelineElement": "frame-process",
                    "objectType": [
                        "face"
                    ],
                    "layerType": [
                        [
                            "prob",
                            "age_conv3"
                        ]
                    ],
                    "alwaysCount": true,
                    "data_interval": 10,
                    "yaw_threshold": 30,
                    "pitch_threshold": 30,
                    "roll_threshold": 30
                }
            ]
        }
    }
    }