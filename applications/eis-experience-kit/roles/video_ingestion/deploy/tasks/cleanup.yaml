# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020 Intel Corporation

---

- name: Remove {{ app_name }} deployment
  command: "helm -n {{ k8s_eis_namespace }} uninstall {{ helm_release_name }}"
  changed_when: true
  ignore_errors: yes

- name: Remove {{ app_name }} Helm charts
  file:
    path: "{{ helm_chart_ingestion }}"
    state: absent

- name: Remove {{ app_name }} ETCD config, user and role
  command: "./etcd_remove.py {{ app_name }}"
  args:
    chdir: "{{ eis_integ_path }}"
  environment:
    ETCDCTL_CACERT: "{{ rootca_cert }}"
    ETCDCTL_CERT: "{{ root_client_cert }}"
    ETCDCTL_KEY: "{{ root_client_key }}"
  changed_when: true
  when: del_zmq_keys == false

- name: Remove {{ app_name }} ETCD config, user and role including ZMQ keys
  command: "./etcd_remove.py {{ app_name }} --delete-keys"
  args:
    chdir: "{{ eis_integ_path }}"
  environment:
    ETCDCTL_CACERT: "{{ rootca_cert }}"
    ETCDCTL_CERT: "{{ root_client_cert }}"
    ETCDCTL_KEY: "{{ root_client_key }}"
  changed_when: true
  when: del_zmq_keys == true

- name: Remove {{ app_name }} ETCD certificates
  file:
    path: "{{ etcd_certs_location }}/{{ app_name }}"
    state: absent

- name: Get node IP
  shell: kubectl get nodes -o jsonpath="{.items[0].status.addresses[?(@.type==\"InternalIP\")].address}"
  register: nodeip
  changed_when: false

- name: Wait for delete deployment
  shell: ssh {{ nodeip.stdout  }} "docker ps | grep {{ docker_registry_address }}/{{ docker_name }}"
  register: result
  until: result.rc == 1
  retries: 6
  delay: 10
  delegate_to: localhost
  changed_when: false
  ignore_errors: yes

- name: Remove {{ app_name }} docker image from the node
  shell: ssh {{ nodeip.stdout  }} 'docker rmi -f  $(docker images -q {{ docker_registry_address }}/{{ docker_name }}) && docker system prune --volumes -f'
  delegate_to: localhost
  changed_when: true
  ignore_errors: yes

